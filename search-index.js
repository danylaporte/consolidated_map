var N=null,E="",T="t",U="u",searchIndex={};
var R=["consolidated_map","children","result","to_owned","clone_into","try_from","borrow","type_id","typeid","borrow_mut","try_into","consolidated_by","ConsolidatedBy","ConsolidatedMap","ConsolidatedMapBuilder","Children"];

searchIndex[R[0]]={"doc":"A map to give all the children associated with an item.","i":[[3,R[13],R[0],"A consolidated map that represent a list of children…",N,N],[3,R[15],E,"An iterator for the children associated with a key.",N,N],[3,R[14],E,"A builder pattern for the ConsolidatedMap.",N,N],[8,R[12],E,"Returns an Iterator that gives all the children and the…",N,N],[10,R[11],E,E,0,[[["self"],["k"]],[R[1]]]],[11,R[1],E,"Returns an iterator containing all the children of an item.",1,[[["self"],[T]],[R[1]]]],[11,"consolidated",E,"Returns an iterator containing all the children of an item…",1,[[["self"],[T]],[R[1]]]],[11,"contains_child",E,"Returns true if a parent is contains the child.",1,[[["self"],[T],[T]],["bool"]]],[11,"new",E,E,2,[[],["self"]]],[11,"insert",E,E,2,[[["self"],[T],[T]]]],[11,"build",E,"Take the ConsolidatedMapBuilder and return a…",2,[[["self"]],["consolidatedmap"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,N],[11,R[5],E,E,1,[[[U]],[R[2]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[2]]]],[11,"into_iter",E,E,3,[[["self"]],["i"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,N],[11,R[5],E,E,3,[[[U]],[R[2]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[R[8]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[2]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[5],E,E,2,[[[U]],[R[2]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[R[8]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[2]]]],[11,R[11],E,E,1,[[["self"],["k"]],[R[1]]]],[11,"next",E,E,3,[[["self"]],["option"]]],[11,"size_hint",E,E,3,N],[11,"default",E,E,1,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],[R[1]]]],[11,"from_iter",E,E,1,[[["i"]],["self"]]]],"p":[[8,R[12]],[3,R[13]],[3,R[14]],[3,R[15]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);